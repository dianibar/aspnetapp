name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: aspnetapp
  ECS_SERVICE:
  ECS_CLUSTER:
  ECS_TASK_DEFINITION:
  CONTAINER_NAME:    

jobs:
  deploy:
    name: Deploy
    runs-on: windows-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          dir
          docker build -t $Env:ECR_REGISTRY/$Env:ECR_REPOSITORY:$Env:IMAGE_TAG .
          docker push $Env:ECR_REGISTRY/$Env:ECR_REPOSITORY:$Env:IMAGE_TAG
          # echo "image=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}" >> ${GITHUB_OUTPUT}